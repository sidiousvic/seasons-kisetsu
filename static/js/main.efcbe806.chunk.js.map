{"version":3,"sources":["seasonImages/spring.gif","seasonImages/summer.gif","seasonImages/fall.gif","seasonImages/winter.gif","SeasonDisplay.js","index.js"],"names":["module","exports","__webpack_require__","p","SeasonDisplay","props","seasons","lat","month","season","console","log","getSeasonData","text","image","springimg","summerimg","fallimg","winterimg","react_default","a","createElement","className","alt","src","App","state","Date","getMonth","errMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","_this3","src_SeasonDisplay_0","onClick","tabIndex","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.efcbe806.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spring.c40db678.gif\";","module.exports = __webpack_public_path__ + \"static/media/summer.9298b8aa.gif\";","module.exports = __webpack_public_path__ + \"static/media/fall.3549beaa.gif\";","module.exports = __webpack_public_path__ + \"static/media/winter.23ab9479.gif\";","import React from \"react\";\nimport \"./SeasonDisplay.css\";\nimport springimg from \"./seasonImages/spring.gif\";\nimport summerimg from \"./seasonImages/summer.gif\";\nimport fallimg from \"./seasonImages/fall.gif\";\nimport winterimg from \"./seasonImages/winter.gif\";\n\nconst getSeasonData = (lat, month, season) => {\n  console.log(\"Month: \", month);\n  const seasons = {};\n  if (month === 3 || month === 4 || month === 5) {\n    lat > 0 ? (seasons.season = \"spring\") : (seasons.season = \"fall\");\n  } else if (month === 6 || month === 7 || month === 8) {\n    lat > 0 ? (seasons.season = \"summer\") : (seasons.season = \"winter\");\n  } else if (month === 9 || month === 10 || month === 11) {\n    lat < 0 ? (seasons.season = \"spring\") : (seasons.season = \"fall\");\n  } else if (month === 12 || month === 1 || month === 2) {\n    lat < 0 ? (seasons.season = \"summer\") : (seasons.season = \"winter\");\n  }\n\n  if (season != null) {\n    seasons.season = season;\n  }\n\n  console.log(seasons.season);\n  return seasons;\n};\n\nconst SeasonDisplay = props => {\n  const seasons = getSeasonData(props.lat, props.month, props.season);\n\n  if (seasons.season === \"spring\") {\n    (seasons.text = \"Ume are blossoming\") && (seasons.image = springimg);\n  } else if (seasons.season === \"summer\") {\n    (seasons.text = \"Koi are swimming\") && (seasons.image = summerimg);\n  } else if (seasons.season === \"fall\") {\n    (seasons.text = \"Momiji are falling\") && (seasons.image = fallimg);\n  } else if (seasons.season === \"winter\") {\n    (seasons.text = \"Snow is piling\") && (seasons.image = winterimg);\n  }\n\n  return (\n    <div className=\"season-display\">\n      <h1>\n        It's {seasons.season}, {seasons.text}\n        <span className=\"blink-ellipsis\">...</span>\n      </h1>\n      <img alt=\"season\" src={seasons.image} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport './index.css';\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    month: new Date().getMonth(),\n    season: null,\n    errMessage: ''\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errMessage: err.message })\n    );\n  }\n\n  render() {\n    if (!this.state.errMessage && !this.state.lat) {\n      return (\n        <div className=\"season-display\">\n          <h1 className=\"loading\">\n            LOADING<span className=\"blink-ellipsis\">...</span>\n          </h1>\n        </div>\n      );\n    } else if (!this.state.err && this.state.lat) {\n      return (\n        <div>\n          <SeasonDisplay\n            lat={this.state.lat}\n            month={this.state.month}\n            season={this.state.season}\n          />\n          <div className=\"buttons\">\n            <div\n              onClick={() => this.setState({ season: 'spring' })}\n              className=\"ui vertical  button\"\n              tabIndex=\"0\"\n            >\n              <i className=\"umbrella icon\" />\n            </div>\n            <div\n              onClick={() => this.setState({ season: 'summer' })}\n              className=\"ui vertical  button\"\n              tabIndex=\"0\"\n            >\n              <i className=\"sun icon\" />\n            </div>\n            <div\n              onClick={() => this.setState({ season: 'fall' })}\n              className=\"ui vertical  button\"\n              tabIndex=\"0\"\n            >\n              <i className=\"leaf icon\" />\n            </div>\n            <div\n              onClick={() => this.setState({ season: 'winter' })}\n              className=\"ui vertical  button\"\n              tabIndex=\"0\"\n            >\n              <i className=\"snowflake icon\" />\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.errMessage) {\n      return <div>Error: {this.state.errMessage}</div>;\n    }\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}